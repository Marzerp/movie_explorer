services:
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    restart: unless-stopped
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "-u", "${MONGO_INITDB_ROOT_USERNAME}", "-p", "${MONGO_INITDB_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - movie_network

#  data_extractor:  
#    build:
#      context: .
#      dockerfile: ModuloGetData/Dockerfile.extract
#    container_name: data_extractor
#    environment:
#      MONGO_ROOT_USER: ${MONGO_ROOT_USER}
#      MONGO_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
#      MONGO_HOST: ${MONGO_HOST}
#      MONGO_PORT: ${MONGO_PORT}
#      MONGO_APP_DB: ${MONGO_APP_DB}
#    depends_on:
#      mongodb:
#        condition: service_healthy
#    networks:
#      - movie_network
      
  app:
    build: ./web/app
    env_file: .env
    environment:
      MONGO_ROOT_USER: ${MONGO_ROOT_USER}
      MONGO_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_APP_DB: ${MONGO_APP_DB}
    ports:
      - "8080:8080"  # Solo expuesto internamente
    volumes:
      - ./output:/output
    depends_on:
      - mongodb
    networks:
      - movie_network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./web/html:/usr/share/nginx/html
      - ./output:/output
      - ./web/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app

volumes:
  mongodb_data:

networks:
  movie_network:
