services:
  mongodb:
    image: mongo:7.0
    container_name: mongodb_container
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_APP_DB: ${MONGO_APP_DB}
      MONGO_APP_USER: ${MONGO_APP_USER}
      MONGO_APP_PASSWORD: ${MONGO_APP_PASSWORD}
    volumes:
      - mongodb_data:/data/db  # Persistencia de datos
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro  # Script de inicializaci√≥n
    ports:
      - "27017:27017"  # Puerto host:contenedor
    healthcheck:
      test: ["CMD", "mongosh", "-u", "${MONGO_ROOT_USER}", "-p", "${MONGO_ROOT_PASSWORD}", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

data_extractor:
    build:
      context: .
      dockerfile: Dockerfile.extractor
    container_name: data_extractor
    environment:
      MONGO_ROOT_USER: ${MONGO_ROOT_USER}
      MONGO_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_APP_DB: ${MONGO_APP_DB}
      MONGO_APP_USER: ${MONGO_APP_USER}
      MONGO_APP_PASSWORD: ${MONGO_APP_PASSWORD}
    depends_on:
      mongo_db:
        condition: service_healthy
    networks:
      - movie_network
    # Opcional: descomentar para ejecutar solo una vez
    # restart: "no"


volumes:
  mongodb_data:  # Volumen para persistir datos
